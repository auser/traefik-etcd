http:
  middlewares:
    default-headers:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000
        customFrameOptionsValue: "SAMEORIGIN"
        customRequestHeaders:
          X-Forwarded-Proto: https
        customResponseHeaders:
          server: ""
          x-powered-by: "Ari dot io"

    traefikAuth:
      basicAuth:
        usersFile: /etc/traefik/.htpasswd

    redirect-handler:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          Location: ""

    default-redirect-middleware:
      redirectRegex:
        regex: "^https?://(.+)"
        replacement: "https://ari.io"
        permanent: true

    handle-service-redirect-middleware:
      redirectRegex:
        regex: "^(https?://)(.*)/(.*)$"
        replacement: "${1}/${2}/${3}"
        permanent: true

    default-ratelimit:
      rateLimit:
        average: 100
        burst: 20
        period: "1m"

    default-auth:
      chain:
        middlewares:
          - traefikAuth
          - default-headers

    redirector-auth:
      forwardAuth:
        address: "http://redirector:3000"
        trustForwardHeader: true
        authResponseHeaders:
          - "ServiceAddr"
          - "ServiceUrl"
          - "X-Forwarded-Host"
          - "X-Forwarded-Uri"
          - "X-Forwarded-Method"
          - "X-Forwarded-Proto"
          - "X-Real-Ip"
        authResponseHeadersRegex: "^X-.*"

    default:
      chain:
        middlewares:
          - default-headers

  routers:
    catch-all-router:
      rule: "HostRegexp(`{host:.+}`)"
      priority: 1
      middlewares:
        - default-redirect-middleware
      service: catch-all-service
      entryPoints:
        - websecure
  
  #   #  traefik-dashboard:
  #   #    rule: "PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
  #   #    service: "api@internal"
  #   #    middlewares:
  #   #      - traefikAuth
  #   #    entrypoints:
  #   #      - dashboard

  #   # prometheus-router:
  #   #   rule: "Host(`www.financialpayments.com`) && PathPrefix(`/prometheus`)"
  #   #   service: prometheus-service
  #   #   entrypoints:
  #   #     - web
  #   #   tls: false

  #   # grafana-router:
  #   #   rule: "Host(`www.financialpayments.com`) && PathPrefix(`/grafana`)"
  #   #   service: grafana-service
  #   #   middlewares:
  #   #     - default
  #   #     - default-auth
  #   #   entrypoints:
  #   #     - web
  #   #   tls: false

  services:
    catch-all-service:
      loadBalancer:
        servers:
          - url: "http://localhost" # This is a dummy URL

  # #   # catch-all-service:
  # #   #   loadBalancer:
  # #   #     servers:
  # #   #       - url: "http://localhost" # This is a dummy URL

  # #   prometheus-service:
  # #     loadBalancer:
  # #       servers:
  # #         - port: 9090
  # #   grafana-service:
  # #     loadBalancer:
  # #       servers:
  # #         - port: 3000
tls:
  options:
    default:
      minVersion: VersionTLS12
      sniStrict: false # Allow requests without SNI
  certificates:
    - certFile: /etc/traefik/traefik.pem
      keyFile: /etc/traefik/traefik-key.pem
  stores:
    default:
      defaultCertificate:
        certFile: /etc/traefik/traefik.pem
        keyFile: /etc/traefik/traefik-key.pem
